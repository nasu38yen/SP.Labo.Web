@{
    ViewBag.Title = "CSSフレームワークの導入";
    
    var strHtml1 = "<link rel=\"stylesheet\" href=\"http://yui.yahooapis.com/pure/0.2.1/base-min.css\"/>";
}

<h2>CSSフレームワーク「<a href="http://purecss.io/">Pure</a>」を導入してみる</h2>

<div>
    <h3>Step1</h3>
    _LayoutにCSSフレームワーク参照を追加する
    <pre class="source">
        @strHtml1
    </pre>
    <p>
        特になにも変わらない；　そうゆうものか→
        <a href="http://purecss.io/base/">Base</a><br />
        変わらないというのはありがたことなのだろう
    </p>
</div>

<div>
    <h3>Step2</h3>
    @Html.ActionLink("商品リストにスタイルを適用してみる", "AllList")
    <p>
        テーブルに指定のclassを指定するとスタイルが変わる<br />
        簡単にPureライブラリに定義されているステキなスタイルを適用できる
    </p>
</div>

<div>
    <h3>Step3</h3>
    @Html.ActionLink("レイアウトを試してみる", "Layout")
    <p>
        Pureのサイトにある<a href="http://purecss.io/layouts/blog/">サンプルレイアウト</a>をパクッてみる。<br />
        レイアウト自体は、CSSフレームワークには含まれていないので、レイアウトのCSSは別途用意する必要がある。<br />
        それもパクれば一応同じようなレイアウトのページを作成できる。<br />
        しかし、にわかにはPureの恩恵を実感できない。<br />
        スマホでも問題なく表示はできる。その秘密はどのあたりなのか？
    </p>       
</div>

<div>
    <h3>オラ的まとめ</h3>
    <ul>
        <li>フレームワークのスタイルを適用するのはとても簡単</li>
        <li>フレームワークを導入して新たな不都合も発生はしない</li>
        <li>ただ、そのご利益は微妙。効果をすぐに実感できないから</li>
        <li>しかしこれで、クロスブラウザ対応や、レスポンシブになるというなら</li>
        <li>その導入をためらう必要はない</li>
        <li>問題は、同じようなフレームワークが他にもあって、その中に自分用を探すことができるのか？ということ</li>
        <li>フレームワークというものはどれもそうだが、一長一短、帯襷な側面はある</li>
        <li>その選択は高度な理解が必要</li>
        <li>日々の作業が楽になるとは言っても、慣れは必要</li>
        <li>いずれにしても、使ってみなければそれもこれも何もわからない</li>
    </ul>
</div>

