@{
    ViewBag.Title = "ログインの実験室";
}

<h2>OAuthでログインしてみる</h2>

<div>
    <h3>Step1</h3>
    @Html.ActionLink("Googleアカウントでログイン", "Login", "Account", new { returnUrl = "/R3OAuth/" }, null)してみる
        
    <p>
        初めて使用するアカウントの場合、Googleで認証された後にプロファイル登録画面が表示される。<br/>
        次回以降は、「ログイン」ボタンをクリックするだけで前回ログインユーザーで自動で（パスワード入力の必要もなく）ログインする。<br/>
        これは楽ちん！！　でも、ログインアカウントを切り替えたいというユーザーはいないだろうか？？
    </p>
</div>

<div>
    <h3>Step2</h3>
    ログイン後のホームページを指定する
        
    <p>
        「Login」アクションを呼び出しに、returnUrlパラメタを指定する<br/>
        指定がなければサイトのホームに移動する<br/>
    </p>
</div>

<div>
    <h3>Step2</h3>
    ログイン時に使用するGoogleアカウントを選択できるようにしてみる
        
    <p>
        調べてみたが、DotNetOpenAuth.OAuthにその機能があるのかどうか？わからなかった;<br/>
        この課題は実際の要求が発生するまで保留にする。<br/>
    </p>
</div>

<div>
    <h3>オラ的まとめ</h3>
    <ul>
        <li>OAuth認証プロバイダに認証を委任することは簡単にできるようになる</li>
        <li>VSのテンプレートがが生成する認証後コールバックのプロファイル登録画面は意味が少しわかりにくい</li>
        <li>プロファイル登録画面はサイトの性格に合わせて、ユーザーにも理解できるようにきちんとデザインしなおす必要あり</li>
        <li>ログインでアカウントを選択可能にさせる方法も現時点では不明</li>
        <li>認証プロバイダからアカウント名以外の情報を得る方法も未調査</li>
        <li>課題は残るが、これは積極的に使って良いんでなかろうか</li>
        <li>せっかくパスワード管理を外部委託するのだから、できれば独自フォーム認証は残さないのベターでなかんべ</li>
        <li>いずれにしても、サイト要件に合わせてカスタマイズは必要</li>
    </ul>
</div>
